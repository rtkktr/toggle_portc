;#include <mega64.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;//macros
;#define PORTC_DIRECTION DDRC
;#define PORTC_OUTPUT PORTC
;
;
;//main function
;void main(void)
; 0000 000B {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000C 
; 0000 000D     //set PORTC
; 0000 000E     PORTC_DIRECTION=0xFF;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000F     PORTC_OUTPUT=0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0010 
; 0000 0011     //toggle PORTC
; 0000 0012     while (1)
;PCODE: $00000012 VOL: 0
; 0000 0013     {
; 0000 0014         //delay 1s
; 0000 0015         delay_ms(1000);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0016 
; 0000 0017         //toggle PORTC
; 0000 0018         PORTC = ~PORTC;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0019     }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001A }
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
